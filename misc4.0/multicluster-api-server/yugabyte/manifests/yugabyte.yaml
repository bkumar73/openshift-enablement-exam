---
# Source: yugabyte/templates/service.yaml
# ---
# apiVersion: v1
# kind: Secret
# metadata:
#   name: yugabyte-tls-client-cert
#   namespace: "h2"
#   labels:    
#     heritage: "Helm"
#     release: "yugabytedb"
#     chart: "yugabyte"
#     component: "yugabytedb"
# type: Opaque
# data:
#   root.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM2VENDQWRHZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFXTVJRd0VnWURWUVFERXd0WmRXZGgKWW5sMFpTQkVRakFlRncweE9UQXlNRGd3TURRd01qSmFGdzB5T1RBeU1EVXdNRFF3TWpKYU1CWXhGREFTQmdOVgpCQU1UQzFsMVoyRmllWFJsSUVSQ01JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBCnVOMWF1aWc4b2pVMHM0OXF3QXhrT2FCaHkwcTlyaVg2akVyZWJyTHJOWDJOeHdWQmNVcWJkUlhVc3VZNS96RUQKUC9CZTNkcTFuMm9EQ2ZGVEwweGkyNFdNZExRcnJBMndCdzFtNHM1WmQzcEJ1U04yWHJkVVhkeUx6dUxlczJNbgovckJxcWRscXp6LzAyTk9TOE9SVFZCUVRTQTBSOFNMQ1RjSGxMQmRkMmdxZ1ZmemVXRlVObXhWQ2EwcHA5UENuCmpUamJJRzhJWkh5dnBkTyt3aURQM1Y1a1ZEaTkvbEtUaGUzcTFOeDg5VUNFcnRJa1pjSkYvWEs3aE90MU1sOXMKWDYzb2lVMTE1Q2svbGFGRjR6dWgrZk9VenpOVXRXeTc2RE92cm5pVGlaU0tQZDBBODNNa2l2N2VHaDVkV3owWgpsKzJ2a3dkZHJaRzVlaHhvbGhGS3pRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0hRWURWUjBsCkJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3RFFZSktvWkkKaHZjTkFRRUxCUUFEZ2dFQkFEQjVRbmlYd1ptdk52eG5VbS9sTTVFbms3VmhTUzRUZldIMHY4Q0srZWZMSVBTbwpVTkdLNXU5UzNEUWlvaU9SN1Vmc2YrRnk1QXljMmNUY1M2UXBxTCt0V1QrU1VITXNJNk9oQ05pQ1gvQjNKWERPCkd2R0RIQzBVOHo3aWJTcW5zQ2Rid05kajAyM0lwMHVqNE9DVHJ3azZjd0RBeXlwVWkwN2tkd28xYWJIWExqTnAKamVQMkwrY0hkc2dKM1N4WWpkK1kvei9IdmFrZG1RZDJTL1l2V0R3aU1SRDkrYmZXWkJVRHo3Y0QyQkxEVmU0aAp1bkFaK3NyelR2Sjd5dkVodzlHSDFyajd4Qm9VNjB5SUUrYSszK2xWSEs4WnBSV0NXMnh2eWNrYXJSKytPS2NKClFsL04wWExqNWJRUDVoUzdhOTdhQktTamNqY3E5VzNGcnhJa2tKST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
#   yugabytedb.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM4ekNDQWR1Z0F3SUJBZ0lSQUo2WEdCN01xZjNXcnRLYUZqQTMzSVl3RFFZSktvWklodmNOQVFFTEJRQXcKRmpFVU1CSUdBMVVFQXhNTFdYVm5ZV0o1ZEdVZ1JFSXdIaGNOTWpRd05EQXpNVFF3T0RBeldoY05NelF3TkRBeApNVFF3T0RBeldqQVRNUkV3RHdZRFZRUURFd2g1ZFdkaFlubDBaVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFECmdnRVBBRENDQVFvQ2dnRUJBTVlaa1lCeko3SHVvSU40R0hHcXpkMVIvM0Y5dEd5TVg3bjQ0S01HNC9QNjA0emUKaDFNMVJqZnFBam9qM2VObE9vaGxlYUEvcThCbnNFZFVEbldxR1laNkRQOXAraXhtVmJlcXpTZXFqb3NocXFlKwpCbjhaSGFadllsSmgxZ2R2OFNXTmJzTWRKRGZLZTZvSmZWTysyQXo1MUlmL2RRK091TTlJL1BkOGpVcTQvNkMvCkxscFdUcFBCWWVjNXZkZWV5MGI0REEvZllSTlNkQnNyLzhmeWZXT0VPd1E5ck9hYmNlakVTeUUyTXFIUHFxc08KdTA0UDVIVU5LYmF5QUs2WVRPU0ljL0FXNjlOazJYVUpJNXV0WFoySWtTcy9VaDJmaTRqbVhqSEtlUFZIMXRhVAp4M1dKVVJKdzlpdCsrWWRERXZBS1YxVjY4SDhoL3FILzUzTU81djBDQXdFQUFhTS9NRDB3RGdZRFZSMFBBUUgvCkJBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQkFmOEUKQWpBQU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQXdObWdmVURmSTE5YUppOTFHUkhBMnNXOHlLbFlMMnNMVwppTldjTTg2RWpDOWUxbEd3ZCtoZmZvc3IvNWRBTDNqSmxpY1kyYktkOGdqc1dLNS9tMjNxalVyZU1CVXZlL3NUCjA1aC81QzV0UE5hdVJ4QmlZQ2pSNjJKZ05xWmFzV1pnMGNuTHM1OEhUUVNUbWJoMEJDOE51SWRqcjlNVlAvS0cKQWNuU2ZlQ2JuYmJqVWtjYmRRSTE0N2tnVDJhdytEYllJTk5vS01YNWZTMUFPVjB6cUYrQXpNV1JoTnF6UWxvaAorM2dWMTJBekNuQnhjSi8yRVQxemVOZjdPY1JwUHI4dm5nOEhXbjkzV3ROZlJlWEt4YzBQSGx2S0tubmpueDlnCmR4Z0RIL3BiTTd4cFYwejRUM3NRR2hCRVBEaGtIOEN4b1RrRW1KRDBoK2RFc1M3NVlRTTIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
#   yugabytedb.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeGhtUmdITW5zZTZnZzNnWWNhck4zVkgvY1gyMGJJeGZ1Zmpnb3diajgvclRqTjZIClV6VkdOK29DT2lQZDQyVTZpR1Y1b0QrcndHZXdSMVFPZGFvWmhub00vMm42TEdaVnQ2ck5KNnFPaXlHcXA3NEcKZnhrZHBtOWlVbUhXQjIveEpZMXV3eDBrTjhwN3FnbDlVNzdZRFBuVWgvOTFENDY0ejBqODkzeU5Tcmovb0w4dQpXbFpPazhGaDV6bTkxNTdMUnZnTUQ5OWhFMUowR3l2L3gvSjlZNFE3QkQyczVwdHg2TVJMSVRZeW9jK3FxdzY3ClRnL2tkUTBwdHJJQXJwaE01SWh6OEJicjAyVFpkUWtqbTYxZG5ZaVJLejlTSForTGlPWmVNY3A0OVVmVzFwUEgKZFlsUkVuRDJLMzc1aDBNUzhBcFhWWHJ3ZnlIK29mL25jdzdtL1FJREFRQUJBb0lCQUF4Zk9td1lSUWxpeXRtTApIWk96eENtblhsbTdMUkorYmRnU2lBMEdlQ1FiclN5bUZUT0lKenVFdk9EZXJwUHVGWXJCTTZoamNabVJvRHZFCkx5Y0FHWm9CYzJCY1FRaVcxNUdoOURBZkFjb0VyMERNcUdFMXMxbGFxWHhWcWVWTEEzZUI3c0gyeHZWSkN4SWkKaDVZOFhBZnJibStUNzc2cC9qYkw2eWlWdWNsSnlpdHpkWXV2YVY5Umw2WDJQZVV4SkFjR1JKcDNKUFMrREdMagpReitMaCtYeG9aZWNJejVvUmp0NXF4NklLdzBaRDlvazlGRFpOYzFwZTBPNFU3ei9XbzdVZk1zaXlHS3FuZFhsClZQYWNJUk13NGxxZUxDdHFBVFZ2K2N4MHN3am1jbGdIa0hseFpHNUtRN0E5NzJuTEk2WWVEYmRQYkl2NlRuTk4KWkRoeW9jRUNnWUVBLzAvSFFmS2lHejZGYTRMNnFYeFIycHEyOUc2eG5EVE5oUmIycTRQcTJOaDlPSjZaSWtJRQpYOXNBQVFOUUVRODVwYjVvbVJYSWIxRndlS2ZWRnJkeWtrZEViYjYrWUFZNnI0RlhDSVVpTFlKVW11Rks1K3JaCm5aazJ2cXp5S2ZoWDlia1BPTVE4SlJwV29xNkMybWhkMzBjZXNibmhySFovdEE4eWNCbjQxNUVDZ1lFQXhxSk4KSEc1bUk4YWh5Z01Pblk0VjR0Y0VZak50T2daTVVsZmFvUldDZEhwcmJLVzA0QXZpSmVWK1UzeHpRclNLazVRWQpvRk1VRVJibHcrOHRnYjVwbm5VTHdhcUdDLzREU3FHZ0NmUkRSNnAvZTdyeExQM3BPcGI4Q2hIcXlwcUZ1VTV2Ck1wL3NDOGNtQmdaYjVwaWpNRFFxaEE5OHdQbWgwNkxDL1FTNG1xMENnWUVBaFNhVE1hYWJ1bit4ejI5QTBSR0EKRXZVclEzRlRlYmJrRkd2MGUyRFNJd05NMHpHTGhaMU9jTHRqVmlQbkp1NTh6eDd0cUNEL0ptY2Z0QjA3ZVp4MAp5U3NYMmZCbmt1Yk14bWs2L2J1SkpwalpET2xBU3BGbHF0YVVBWDlxMEU2dmVQeHBudDVneTZ6Znovb1pUbFN0CjJGdGIrNjZJcm93aWI4S1pPSE9qSHJFQ2dZQksrd3RHdHpuaE9XTHJZZG9MaVk0amNlMGFzTFVEbVVzSUxsZSsKUk9OWTJybGdhdkRyUGpFaEF3OTdybGZJRDJUY0xxUlpLT05EVERSeGtRREpvRG80Y1pCOWk4Uk1GSmZqZlQxdgpaSUJkTmpRblhic2FzOEp0dG43dndqR3lSMEJCWWlWQm8vS3p3M3BML2V5RkVJdFJiKys0cUN2OG9IOEE1OGpaClFBWDdoUUtCZ1FDMWR4SGhURm81UEVZUHJUdk9aVFZYTldxSDJGakVpSlRZVGV3Sm1CcDMwU3NlZkl3WkFFUmIKMHJtdEpHWWw1RFFPV2tpTkdKTVBXcXJWK1lJWURlR1lkeEJpbW4zTGFPeHAxVVVnNGc2R3ZGUjVpNi9lSlhKSQpSRlNVLzdQc2p2bkt1SVR6QXJnKzljYnlZNVF2RVhtQkZPUXVkMEVDcEVHem5ZTFJtYllpWlE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: yugabyte-tls-client-cert
spec:
  # Secret names are always required.
  secretName: yugabyte-tls-client-cert
  duration: 2160h # 90d
  renewBefore: 360h # 15d
  isCA: false
  usages:
    - client auth
  # At least one of a DNS Name, URI, IP address or otherName is required.
  dnsNames:
    - yugabyte
  # Issuer references are always required.
  issuerRef:
    name: in-cluster-issuer
    kind: ClusterIssuer
    group: cert-manager.io
---    
# Source: yugabyte/templates/service.yaml
# apiVersion: v1
# kind: Secret
# metadata:
#   name: yb-master-yugabyte-tls-cert
#   namespace: "h2"
#   labels:    
#     app: "yb-master"    
#     heritage: "Helm"
#     release: "yugabytedb"
#     chart: "yugabyte"
#     component: "yugabytedb"
# type: Opaque
# data:
#   node.yb-master-0.yb-masters.h2.svc.cluster.${cluster}.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtekNDQW9PZ0F3SUJBZ0lSQU9aTlh4Wm8wb05ZOHN1VDNSVnUrTDB3RFFZSktvWklodmNOQVFFTEJRQXcKRmpFVU1CSUdBMVVFQXhNTFdYVm5ZV0o1ZEdVZ1JFSXdIaGNOTWpRd05EQXpNVFF3T0RBeldoY05NelF3TkRBeApNVFF3T0RBeldqQTJNVFF3TWdZRFZRUURFeXQ1WWkxdFlYTjBaWEl0TUM1NVlpMXRZWE4wWlhKekxtZ3lMbk4yCll5NWpiSFZ6ZEdWeUxteHZZMkZzTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEKd24zQ3lzeHE3MXd5K1BUWHBCM0FXSWo2U1lNU3IrdW4vWkJhdzlaemR6eGFTNTV6ZXIvQTc4b3FDOGV2QVJvRQpmemRIaHZGQmNVK3Jzd1ZXdDFFVGVURjVpT2Q2K2JXSE11L083RFNqYjZpd2tUS3UvT09ERmtVa1pvVW10eXNpCisyZjZvQkJvWHZ6L1RTMnAxU2g3ZXFkR1JISGZEVktoVlZ5Vk50bEFmRnR5bzBMbGpSckJzMDd2Q3hDRmdBWlIKRXRsVE1wS0JIVEwxeHA5cTNXTms4U2doaTV4Ync5M0J4bkpLWThmaUhFNG5lRFJGTk5PQlgySi9sNU1NeEFoMQpEZ2JNQndZdHVMR2xVQUplUXpST3ZSNXAwSTMxaEpQVm5NRmhaRXptbytDdys5THhaY1pPUGo1d25OZy9HY0RDCnExTi9yTjBHcE9jQ2pMckpEK0UwWndJREFRQUJvNEhETUlIQU1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlYKSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQ0JnQVlEVlIwUgpCSGt3ZDRJcmVXSXRiV0Z6ZEdWeUxUQXVlV0l0YldGemRHVnljeTVvTWk1emRtTXVZMngxYzNSbGNpNXNiMk5oCmJJSWFLaTU1ZFdkaFlubDBaV1JpTFhsaUxXMWhjM1JsY25NdWFES0NMQ291ZVhWbllXSjVkR1ZrWWkxNVlpMXQKWVhOMFpYSnpMbWd5TG5OMll5NWpiSFZ6ZEdWeUxteHZZMkZzTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCRgp0Y2d6V1A4Tlh3L25MaHkxMkRwQllvZWNob0ErWGVMelNNakdieHBrV0l2Y3EwZlZKZUxHWElsSnBNaUVIWGFICmt1Z29lUjB1YjdVaURWOEFFMThYOEt3Lzk2eEF2cFcyT1pMd1YxVm8rWEtyYTVYblp4YytHaFFTRDN2aC9hM2kKMmIyM1BwNTIrcExIQ04yT1BySm5hTjl4S1ErbzdLamswMVNrOEZ2dU9Wc01VVmJkMk1XOW1qZCs2S0hXRHh5cgp4SWNhVnFrck9qbE5UN1o5K3RTb2x3Nm1XRGcxYzBHWk8zREt2blB3OEZUeGVCM1NBUUZuYUpua3hFSXorOUhBCkMrOEFZY3RValF4cDVZZXVMZ3R4OXRBMldTbkx4bGFNR0tYMGtxSkF1QTFZU25ndTBaSk1RTm9NTVV5M09GbDgKNVlFK21hY2NUdEJYelI5TTNSZnEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
#   node.yb-master-0.yb-masters.h2.svc.cluster.${cluster}.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd24zQ3lzeHE3MXd5K1BUWHBCM0FXSWo2U1lNU3IrdW4vWkJhdzlaemR6eGFTNTV6CmVyL0E3OG9xQzhldkFSb0VmemRIaHZGQmNVK3Jzd1ZXdDFFVGVURjVpT2Q2K2JXSE11L083RFNqYjZpd2tUS3UKL09PREZrVWtab1VtdHlzaSsyZjZvQkJvWHZ6L1RTMnAxU2g3ZXFkR1JISGZEVktoVlZ5Vk50bEFmRnR5bzBMbApqUnJCczA3dkN4Q0ZnQVpSRXRsVE1wS0JIVEwxeHA5cTNXTms4U2doaTV4Ync5M0J4bkpLWThmaUhFNG5lRFJGCk5OT0JYMkovbDVNTXhBaDFEZ2JNQndZdHVMR2xVQUplUXpST3ZSNXAwSTMxaEpQVm5NRmhaRXptbytDdys5THgKWmNaT1BqNXduTmcvR2NEQ3ExTi9yTjBHcE9jQ2pMckpEK0UwWndJREFRQUJBb0lCQUQxRWFxbUI3YW5MYkk4NgphZmZjRzJ5SWNmZllYM21samJ6MXpYSGx5MmZqVGpxR0JyRERXUjd3bTRBc2ZqZWxuNGNIdmZPSGFtc3NndFVaCk9IRDFER0pnTUgzdEZiTTErUW9WdXlSempJeXZJamdMTkU2YnlQNnA5MGFJYVdMSUp2UDFsR0Q1NmpjS0VjNloKTk9mZUljL0lnLzBwdGU4M2VYVXZmaDNTSUZ0TDBodnVwZ0QvU1I1Q08wc1J6MFAyeFlSWGJtZGhmUS9aOWJYRAo5ZXNUS0RlenlhMTRlcXRmUnZUcTdOSzlDT2cvdEVtTW5pYjN4S2wvZlY1V0prQTUxYW16L1JZUU5KcFk0c2UrCjFrMnM5M0RkT2R2RURUdnhPak1LVGlJR0d2OVV1V3ZYTVZGUE9VVTRESW9aNEN0OXMxUE8zc1dNa1hPZmQ5a1kKbnI0dllUa0NnWUVBOTltR09kT3VnQTBkU01wVzdBT3dsYXRSeTdpbW1tcGM3ZzJBVzRrZmJaN3FQMmZUNmFWeApHZWgwUzhOZXo3ZEZWYy9sZ0RvWEc5NW1PQncybFJTdU1kcXpQZWVHZjk0TmhRWnFIbzlndmZUQ0tFSHJSNFZqCng2QkdicStLR1dnV2JYWlRrb2NvM09MeTlwWUZDQ0JzTmtDZXM3N250ZCtCckVrMjQ5VG11eTBDZ1lFQXlPTU0KY1FCNHlxQldOZUVob2RpZHJ4Q2VKbTk0TStqbWRBM0V1cVlCaVAvVW81Y3ArSVo4bVNJb0x0ZWthU1JvODBWZQpWZFNCNWI0S3FqMElLaFNjV0JBdEtzWFhxWFVqNkZTV0FQbjFRVk11LzhtRElrS2RISnBIRTRtWDMwNjNVY2wzCm5sb1RlTjJYVVpOZ0FJaHcveCt5RXVQY1FVR1ZkTFljY1lQZFdtTUNnWUF3VjladGl4TjdXSk9Bc2k3WUpEUWEKVFd0TDhEMVcyeTQ3SkprSHdheEdwbnVNV0lVbUNxWVA1cDVnZE1BV2hlblpQZzdHdnczbzJxMVhmbkZMRE5pWgpVczRwWWZLREdGM010NTZWVFdRU1NSNWgyZEc1aHBRYXlQRlQvNXRSTDFOSWtJN21nc1IrcVNtNDNUUW9ES0x1CnhoWHVlMnNZdDNyRWp4ZE13eWNxRlFLQmdIbXhlWGIzRnpXQWZka3o0YURlelY4aERQMHhwN3FpaXdDZzJwMUwKTlVEZDRkMmNGRFBXbktKVG04NE1taStMZS94cStHTzhVVmh3a0p0aVQ1RFdYWVBIZ09VWlpyVGtIblYrMEVRVgpKK3FEenNQck9nSkdJbEVTY0o0NFN3VmU5UlNabkZvVUxSbVorekhTdW1SNFF5TjUrdkVRa2Z3Q0U5elkrVkFXCjFzQUxBb0dCQUw2TXp0U0ZRRGJ6Tzd2MVhYdVFPbnUyaE5uRjNUQy9QbEoydGYxN1JBeHR0ZVFHdVloOVFPc1UKMTlBa3h3SFF3aE9IeDkyQ0x4STNyRThiYThJNGxQQWNLY3BjOHc5QWNBRFlXakxocnluNUdTeHlHdVVTOEhhWAo5WWVEZlM3bTdTMDNrVWRySFh6UHJFZmNyUmN2cXZWeXpCMUdYMkE4M0pKY25aSlUwNDhCCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
#   ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM2VENDQWRHZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFXTVJRd0VnWURWUVFERXd0WmRXZGgKWW5sMFpTQkVRakFlRncweE9UQXlNRGd3TURRd01qSmFGdzB5T1RBeU1EVXdNRFF3TWpKYU1CWXhGREFTQmdOVgpCQU1UQzFsMVoyRmllWFJsSUVSQ01JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBCnVOMWF1aWc4b2pVMHM0OXF3QXhrT2FCaHkwcTlyaVg2akVyZWJyTHJOWDJOeHdWQmNVcWJkUlhVc3VZNS96RUQKUC9CZTNkcTFuMm9EQ2ZGVEwweGkyNFdNZExRcnJBMndCdzFtNHM1WmQzcEJ1U04yWHJkVVhkeUx6dUxlczJNbgovckJxcWRscXp6LzAyTk9TOE9SVFZCUVRTQTBSOFNMQ1RjSGxMQmRkMmdxZ1ZmemVXRlVObXhWQ2EwcHA5UENuCmpUamJJRzhJWkh5dnBkTyt3aURQM1Y1a1ZEaTkvbEtUaGUzcTFOeDg5VUNFcnRJa1pjSkYvWEs3aE90MU1sOXMKWDYzb2lVMTE1Q2svbGFGRjR6dWgrZk9VenpOVXRXeTc2RE92cm5pVGlaU0tQZDBBODNNa2l2N2VHaDVkV3owWgpsKzJ2a3dkZHJaRzVlaHhvbGhGS3pRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0hRWURWUjBsCkJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3RFFZSktvWkkKaHZjTkFRRUxCUUFEZ2dFQkFEQjVRbmlYd1ptdk52eG5VbS9sTTVFbms3VmhTUzRUZldIMHY4Q0srZWZMSVBTbwpVTkdLNXU5UzNEUWlvaU9SN1Vmc2YrRnk1QXljMmNUY1M2UXBxTCt0V1QrU1VITXNJNk9oQ05pQ1gvQjNKWERPCkd2R0RIQzBVOHo3aWJTcW5zQ2Rid05kajAyM0lwMHVqNE9DVHJ3azZjd0RBeXlwVWkwN2tkd28xYWJIWExqTnAKamVQMkwrY0hkc2dKM1N4WWpkK1kvei9IdmFrZG1RZDJTL1l2V0R3aU1SRDkrYmZXWkJVRHo3Y0QyQkxEVmU0aAp1bkFaK3NyelR2Sjd5dkVodzlHSDFyajd4Qm9VNjB5SUUrYSszK2xWSEs4WnBSV0NXMnh2eWNrYXJSKytPS2NKClFsL04wWExqNWJRUDVoUzdhOTdhQktTamNqY3E5VzNGcnhJa2tKST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: yb-master-yugabyte-tls-cert
spec:
  # Secret names are always required.
  secretName: yb-master-yugabyte-tls-cert
  duration: 2160h # 90d
  renewBefore: 360h # 15d
  isCA: false
  usages:
    - client auth
    - server auth
  # At least one of a DNS Name, URI, IP address or otherName is required.
  dnsNames:
    - yb-master-0.yb-masters.h2.svc.cluster.local
    - yb-master-0.yb-masters.h2
    - yb-master-0.yb-masters.h2.svc.cluster.${cluster}    
  # Issuer references are always required.
  issuerRef:
    name: in-cluster-issuer
    kind: ClusterIssuer
    group: cert-manager.io
---    
# Source: yugabyte/templates/service.yaml
# apiVersion: v1
# kind: Secret
# metadata:
#   name: yb-tserver-yugabyte-tls-cert
#   namespace: "h2"
#   labels:    
#     app: "yb-tserver"    
#     heritage: "Helm"
#     release: "yugabytedb"
#     chart: "yugabyte"
#     component: "yugabytedb"
# type: Opaque
# data:
#   node.yb-tserver-0.yb-tservers.h2.svc.cluster.${cluster}.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURvVENDQW9tZ0F3SUJBZ0lSQUl0dExFVFhrV05XRUxTRzBKWnZ2VnN3RFFZSktvWklodmNOQVFFTEJRQXcKRmpFVU1CSUdBMVVFQXhNTFdYVm5ZV0o1ZEdVZ1JFSXdIaGNOTWpRd05EQXpNVFF3T0RBeldoY05NelF3TkRBeApNVFF3T0RBeldqQTRNVFl3TkFZRFZRUURFeTE1WWkxMGMyVnlkbVZ5TFRBdWVXSXRkSE5sY25abGNuTXVhREl1CmMzWmpMbU5zZFhOMFpYSXViRzlqWVd3d2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUIKQVFEeXR4NHRpdWJuWE5SVzJZdEc1SWRVYVE0NTVGYUdmSkJiQ2JQRmlvVWZwSVNXcHVHWnhEVjJjWXFHdUc1ZQpVaXh6b0RIYWRHQ3lIbmpxZWc1ZEdPc3FPMVJBT3Z0TFJBMGhZYkUyZ1lNRkRwN0lWL2ZYK0tXYzhaaTVQc2F6CjU3aFBmSlJwam1KU05KL1duWUFPa3dveEhkUFpIUWNNUC9OMEZUQ0thK3hFYVkvT2NSdDZObnpKL0pyRXV0T0UKeUlScTA3LzFQUVlvSVlWTmk5OFJPbTVSdXlveTA5NVVXbTdENDZUeTg1L3pvZnd2THBrWmdGZWF1QmF5ZnE4ZQp6Z3FZbXI1RWljSEZ3UFdSbmRhdzJvbHZtdHpnQTY2dFA3d0ZnVzVJMTNJVnV3Nzl5ZTR1TDZUZXlFVW5Da2JECkkvdGJkWENadlovSzJKS1E1UnRCQ2NSWEFnTUJBQUdqZ2Njd2djUXdEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEcKQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNSUdFQmdOVgpIUkVFZlRCN2dpMTVZaTEwYzJWeWRtVnlMVEF1ZVdJdGRITmxjblpsY25NdWFESXVjM1pqTG1Oc2RYTjBaWEl1CmJHOWpZV3lDR3lvdWVYVm5ZV0o1ZEdWa1lpMTVZaTEwYzJWeWRtVnljeTVvTW9JdEtpNTVkV2RoWW5sMFpXUmkKTFhsaUxYUnpaWEoyWlhKekxtZ3lMbk4yWXk1amJIVnpkR1Z5TG14dlkyRnNNQTBHQ1NxR1NJYjNEUUVCQ3dVQQpBNElCQVFDWW8xNmxYS1Fhclo0S2szOUNzQWptaS9uZC9WK1pFbVJsMmJQbGVRdjNYZjhHU0ZqVkw0WTR2VWpPCjgvYkJ2VjdJUDZRb1gzYlo5Qnl2SURSbVo0U1ZxcXZsaWtWeTVZdGJES3dSSXp2eVRMZkJEWkNwVEw1bEQyaFcKbDJQS0pzOVhXQ1kzYXA4UXNZanB2My84ZW1MSGlsWnFMV3o4QkZvQ1RRN0d4S2tqazJRczRVWmNtZU1ucEdScApNTzJBdEpLVUVseS9vOUJqQzNrNTJUSTRCV2svSlFkTWdNdTBteWpZR3hnbUczODI0SHVUeHk5NU5UTEtNNEZMCnhuV3pHNFpneEFTQy9rOWxLcEV2M2MvYUxuU3hFQ21kM0g3bTByUWU4UUE0VUFhOUROdmxLNXBYNXVDYXlud0gKd0RraEdzbklXaWdBSlhsMmlQbWZ4Nkp2VHdPUQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
#   node.yb-tserver-0.yb-tservers.h2.svc.cluster.${cluster}.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBOHJjZUxZcm01MXpVVnRtTFJ1U0hWR2tPT2VSV2hueVFXd216eFlxRkg2U0VscWJoCm1jUTFkbkdLaHJodVhsSXNjNkF4Mm5SZ3NoNTQ2bm9PWFJqcktqdFVRRHI3UzBRTklXR3hOb0dEQlE2ZXlGZjMKMS9pbG5QR1l1VDdHcytlNFQzeVVhWTVpVWpTZjFwMkFEcE1LTVIzVDJSMEhERC96ZEJVd2ltdnNSR21Qem5FYgplalo4eWZ5YXhMclRoTWlFYXRPLzlUMEdLQ0dGVFl2ZkVUcHVVYnNxTXRQZVZGcHV3K09rOHZPZjg2SDhMeTZaCkdZQlhtcmdXc242dkhzNEttSnErUkluQnhjRDFrWjNXc05xSmI1cmM0QU91clQrOEJZRnVTTmR5RmJzTy9jbnUKTGkrazNzaEZKd3BHd3lQN1czVndtYjJmeXRpU2tPVWJRUW5FVndJREFRQUJBb0lCQVFDUzJNMnVXa0szcWtkaQpRSDV1cHVkbDM2WFd5dHE2eFhTRlVBcHZNdzYyQlZDZTRWclBNSkgwRmwvc2dIdHVINk43VldtME5RTW40UjNoCkozVzNSOU5JR3RzdmZULzYyckpqQnZzejhnbTJMcEZNdjBSWmE3dXZoOUNTQzNRbTlzUmhld3RFRGZ4WXBqUXEKb2VJUGIxRVVSR3FmQ2x2d1FtVG1UOGV0aC94THFyRER1TEdhNEFONE5LQ1FmZ1ZtVmdmSlprWUQ0d0ZZSWFhZQpncWJ6Q29qWWVPclRBSzFqamM0OFBXd0hHNStJcWRBb3p2ZUZTUG9VL3pFdTF5c0s3WUJMNGQwV3V5cUxHN0U2CnkrVmlkM0E0dDh4ZXZJY2N2czdzRzFGYmdkdWZ2OThIbjBBb0g1aGxNL3NJMVluQ2NpVDR1TnNnQ1F2RFkwaFAKaWlNRzJGSTVBb0dCQVBTdVltTStxTnlZSW1MSTFWeHMzWk04OGhwRlRaZ28wZE9ER21uYjdmQ3A0cXJqZG9zSQp6Zm1CL25YaDJhUmx0WEJteHFtaDdmUVBNMjFSbld3cDlIdjh2TjR0ZG02LzhhdFYrWFg3YnVyaUhZdXdRS2RnCk5USGNZN1FFVEhzUTRGaCtNV1VGVVoreVJOMnRaS2s1RngzRjlyQmZ6cXFheFRzQjRWU24yd3NsQW9HQkFQM3gKYythem5oenQvVUk1RXFEQSt2K0tzb0FhbWFZOHp0SSs2RDZ6Q2dlMGN6SVBmc3JmRDhtaWlTeEdOUUxheW5VdQpnVytReGkzZUFrejVwMkdjU09vWHRGNG5FcGZNMjE0YU40UXlZSnRiRmJZNWhrTXpkakhZVWU0MXhwdVBwSldjCjlzRWoyOWRRM0NvUVVqUEQ2WnJXMm9xaURCQnY2bHZ6T2g4YnU5YkxBb0dCQUx0aUtYc3o2NEkxQ0hCNnVkdTAKaStSTTBtU0lHcXFpNkQ2QnN1TExTV2Y3MHRsb3BjcElqZVc5UmpEbExCYVl4ZUUwOUlQSXZVRWh1eExIWkRZSAowM0o0MWZPWkFaQkRjMEx4N3NBS05LR3hWVXM3U2VoazU1Z3QzalZvN1dGNlJUWEFQdmZNb1B3YVBGOUFnVXlQCnFrSms3MDJYc2VBNTh6NERiSnUyaVN2NUFvR0FjcHptamFwbDQzSzZpb2dOMDBZbVF1M0xrS3Z3eXluSXd2V24KaHB6eUd2WWp3K1ZnZVpuaG0wVGptbnI1ZEJkaHB5L2ROWWhuR2M2SXhVc3NjNDdCRGY2eTVvZkdDWU5wUXZpYwpNK3MwMVFsd0xEV2NWbnBFajB5dDlkQ0ptaTVqdnk3LzQ3NFdmQUMvemJCZUdZVUR5MkhMY3lTZVExRHZ1cDUxCmpoTExYYThDZ1lCTys5eS8xejZwY2R4ekdKUU1wUGNFODBua0ZsUE4ySDRobGpLMG8xYk5maTBXbkxUaDNMckIKU3lTUXRJQ1QxWXRKVXpFbkJaVlNDbUhiUUE2U045L2dSeDJPT0lGUFlialBLcmE5ZW9ycFJjMEx3Y0lOQ21JQQpqUm5BcGRiazhMMUk2QVo5aHdPNTdPSkZoT0MvNXo0a2p5aTZCSUJzVkRpaXBOQW9yMmVGUUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
#   ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM2VENDQWRHZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFXTVJRd0VnWURWUVFERXd0WmRXZGgKWW5sMFpTQkVRakFlRncweE9UQXlNRGd3TURRd01qSmFGdzB5T1RBeU1EVXdNRFF3TWpKYU1CWXhGREFTQmdOVgpCQU1UQzFsMVoyRmllWFJsSUVSQ01JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBCnVOMWF1aWc4b2pVMHM0OXF3QXhrT2FCaHkwcTlyaVg2akVyZWJyTHJOWDJOeHdWQmNVcWJkUlhVc3VZNS96RUQKUC9CZTNkcTFuMm9EQ2ZGVEwweGkyNFdNZExRcnJBMndCdzFtNHM1WmQzcEJ1U04yWHJkVVhkeUx6dUxlczJNbgovckJxcWRscXp6LzAyTk9TOE9SVFZCUVRTQTBSOFNMQ1RjSGxMQmRkMmdxZ1ZmemVXRlVObXhWQ2EwcHA5UENuCmpUamJJRzhJWkh5dnBkTyt3aURQM1Y1a1ZEaTkvbEtUaGUzcTFOeDg5VUNFcnRJa1pjSkYvWEs3aE90MU1sOXMKWDYzb2lVMTE1Q2svbGFGRjR6dWgrZk9VenpOVXRXeTc2RE92cm5pVGlaU0tQZDBBODNNa2l2N2VHaDVkV3owWgpsKzJ2a3dkZHJaRzVlaHhvbGhGS3pRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0hRWURWUjBsCkJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3RFFZSktvWkkKaHZjTkFRRUxCUUFEZ2dFQkFEQjVRbmlYd1ptdk52eG5VbS9sTTVFbms3VmhTUzRUZldIMHY4Q0srZWZMSVBTbwpVTkdLNXU5UzNEUWlvaU9SN1Vmc2YrRnk1QXljMmNUY1M2UXBxTCt0V1QrU1VITXNJNk9oQ05pQ1gvQjNKWERPCkd2R0RIQzBVOHo3aWJTcW5zQ2Rid05kajAyM0lwMHVqNE9DVHJ3azZjd0RBeXlwVWkwN2tkd28xYWJIWExqTnAKamVQMkwrY0hkc2dKM1N4WWpkK1kvei9IdmFrZG1RZDJTL1l2V0R3aU1SRDkrYmZXWkJVRHo3Y0QyQkxEVmU0aAp1bkFaK3NyelR2Sjd5dkVodzlHSDFyajd4Qm9VNjB5SUUrYSszK2xWSEs4WnBSV0NXMnh2eWNrYXJSKytPS2NKClFsL04wWExqNWJRUDVoUzdhOTdhQktTamNqY3E5VzNGcnhJa2tKST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: yb-tserver-yugabyte-tls-cert
spec:
  # Secret names are always required.
  secretName: yb-tserver-yugabyte-tls-cert
  duration: 2160h # 90d
  renewBefore: 360h # 15d
  isCA: false
  usages:
    - client auth
    - server auth
  # At least one of a DNS Name, URI, IP address or otherName is required.
  dnsNames:
    - yb-tserver-0.yb-tservers.h2.svc.cluster.local
    - yb-tserver-0.yb-tservers.h2
    - yb-tserver-0.yb-tservers.h2.svc.cluster.${cluster}    
  # Issuer references are always required.
  issuerRef:
    name: in-cluster-issuer
    kind: ClusterIssuer
    group: cert-manager.io
---
# Source: yugabyte/templates/debug_config_map.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: yugabytedb-master-hooks
  namespace: "h2"
data:
  yb-master-0-pre_debug_hook.sh: "echo 'hello-from-pre' " 
  yb-master-0-post_debug_hook.sh: "echo 'hello-from-post' "
---
# Source: yugabyte/templates/debug_config_map.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: yugabytedb-tserver-hooks
  namespace: "h2"
data:
  yb-tserver-0-pre_debug_hook.sh: "echo 'hello-from-pre' " 
  yb-tserver-0-post_debug_hook.sh: "echo 'hello-from-post' "
---
# Source: yugabyte/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "yb-masters"
  labels:    
    app: "yb-master"    
    heritage: "Helm"
    release: "yugabytedb"
    chart: "yugabyte"
    component: "yugabytedb"
    service-type: "headless"
spec:
  clusterIP: None
  ports:
    - name: "http-ui"
      port: 7000
    - name: "tcp-rpc-port"
      port: 7100
    - name: "yugabyted-ui"
      port: 15433
  selector:    
    app: "yb-master"
---
# Source: yugabyte/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "yb-master-ui"
  labels:    
    app: "yb-master"    
    heritage: "Helm"
    release: "yugabytedb"
    chart: "yugabyte"
    component: "yugabytedb"
    service-type: "endpoint"
spec:
  ports:
    - name: "http-ui"
      port: 7000
  selector:    
    app: "yb-master"
  type: ClusterIP
---
# Source: yugabyte/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "yb-tservers"
  labels:    
    app: "yb-tserver"    
    heritage: "Helm"
    release: "yugabytedb"
    chart: "yugabyte"
    component: "yugabytedb"
    service-type: "headless"
spec:
  clusterIP: None
  ports:
    - name: "http-ui"
      port: 9000
    - name: "http-ycql-met"
      port: 12000
    - name: "http-yedis-met"
      port: 11000
    - name: "http-ysql-met"
      port: 13000
    - name: "tcp-rpc-port"
      port: 9100
    - name: "tcp-yedis-port"
      port: 6379
    - name: "tcp-yql-port"
      port: 9042
    - name: "tcp-ysql-port"
      port: 5433
    - name: "yugabyted-ui"
      port: 15433
  selector:    
    app: "yb-tserver"
---
# Source: yugabyte/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: "yb-tserver-service"
  labels:    
    app: "yb-tserver"    
    heritage: "Helm"
    release: "yugabytedb"
    chart: "yugabyte"
    component: "yugabytedb"
    service-type: "endpoint"
spec:
  ports:
    - name: "tcp-yedis-port"
      port: 6379
    - name: "tcp-yql-port"
      port: 9042
    - name: "tcp-ysql-port"
      port: 5433
  selector:    
    app: "yb-tserver"
  type: ClusterIP
---
# Source: yugabyte/templates/service.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "yb-master"
  namespace: "h2"
  labels:    
    app: "yb-master"    
    heritage: "Helm"
    release: "yugabytedb"
    chart: "yugabyte"
    component: "yugabytedb"
spec:
  serviceName: "yb-masters"
  podManagementPolicy: Parallel
  
  replicas: 1
  
  volumeClaimTemplates:
    - metadata:
        name: datadir0
        labels:          
          heritage: "Helm"
          release: "yugabytedb"
          chart: "yugabyte"
          component: "yugabytedb"
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: 10Gi
    - metadata:
        name: datadir1
        labels:          
          heritage: "Helm"
          release: "yugabytedb"
          chart: "yugabyte"
          component: "yugabytedb"
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: 10Gi
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  selector:
    matchLabels:      
      app: "yb-master"
  template:
    metadata:
      annotations:
        checksum/rootCA: 90ace38c3efb4bf1768630295603f06eb0c140b0384c0860e28e0ad1d4dd6a44
      labels:        
        app: "yb-master"        
        heritage: "Helm"
        release: "yugabytedb"
        chart: "yugabyte"
        component: "yugabytedb"
        yugabytedUi: "true"
    spec: # yb-masters
      terminationGracePeriodSeconds: 300
      containers:
      - name: "yb-master"
        image: "yugabytedb/yugabyte:2.21.0.0-b545"
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
                - "bash"
                - "-c"
                - >
                  mkdir -p /mnt/disk0/cores;
                  mkdir -p /mnt/disk0/yb-data/scripts;
                  if [ ! -f /mnt/disk0/yb-data/scripts/log_cleanup.sh ]; then
                    if [ -f /home/yugabyte/bin/log_cleanup.sh ]; then
                      cp /home/yugabyte/bin/log_cleanup.sh /mnt/disk0/yb-data/scripts;
                    fi;
                  fi
        livenessProbe:
          exec:
            command:
            - bash
            - -v
            - -c
            - |
              echo "disk check at: $(date)" \
                | tee "/mnt/disk0/disk.check" "/mnt/disk1/disk.check" \
                && sync "/mnt/disk0/disk.check" "/mnt/disk1/disk.check";
              exit_code="$?";
              echo "disk check exited with: ${exit_code}";
              exit "${exit_code}"
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: YBDEVOPS_CORECOPY_DIR
          value: "/mnt/disk0/cores"
        
        resources:
          limits:
            cpu: "2"
            memory: 2Gi
          requests:
            cpu: "2"
            memory: 2Gi
        
        # core dumps are collected to workingDir if
        # kernel.core_pattern is set to a relative path like
        # core.%e.%p.%t ref:
        # https://github.com/yugabyte/charts/issues/11
        workingDir: "/mnt/disk0/cores"
        command:
          - "/sbin/tini"
          - "--"
        args:
          - "/bin/bash"
          - "-c"
          - |
            if [ -f /home/yugabyte/tools/k8s_preflight.py ]; then
              /home/yugabyte/tools/k8s_preflight.py all
            fi && \
            echo "disk check at: $(date)" \
              | tee "/mnt/disk0/disk.check" "/mnt/disk1/disk.check" \
              && sync "/mnt/disk0/disk.check" "/mnt/disk1/disk.check" && \
            if [ -f /home/yugabyte/tools/k8s_preflight.py ]; then
              PYTHONUNBUFFERED="true" /home/yugabyte/tools/k8s_preflight.py \
                dnscheck \
                --addr="$(HOSTNAME).yb-masters.$(NAMESPACE).svc.cluster.${cluster}" \
                --port="7100"
            fi && \
            
            if [ -f /home/yugabyte/tools/k8s_preflight.py ]; then
              PYTHONUNBUFFERED="true" /home/yugabyte/tools/k8s_preflight.py \
                dnscheck \
                --addr="$(HOSTNAME).yb-masters.$(NAMESPACE).svc.cluster.${cluster}:7100" \
                --port="7100"
            fi && \
            
            if [ -f /home/yugabyte/tools/k8s_preflight.py ]; then
              PYTHONUNBUFFERED="true" /home/yugabyte/tools/k8s_preflight.py \
                dnscheck \
                --addr="0.0.0.0" \
                --port="7000"
            fi && \
            
            if [[ -f /home/yugabyte/tools/k8s_parent.py ]]; then
              k8s_parent="/home/yugabyte/tools/k8s_parent.py"
            else
              k8s_parent=""
            fi && \
            exec ${k8s_parent} /home/yugabyte/bin/yb-master \
              --fs_data_dirs=/mnt/disk0,/mnt/disk1 \
              --master_addresses=yb-master-0.yb-masters.h2.svc.cluster.cluster1:7100,yb-master-0.yb-masters.h2.svc.cluster.cluster2:7100,yb-master-0.yb-masters.h2.svc.cluster.cluster3:7100 \
              --replication_factor=3 \
              --enable_ysql=true \
              --metric_node_name=$(HOSTNAME) \
              --memory_limit_hard_bytes=1824522240 \
              --stderrthreshold=0 \
              --num_cpus=2 \
              --undefok=num_cpus,enable_ysql \
              --default_memory_limit_to_ram_ratio="0.85" \
              --leader_failure_max_missed_heartbeat_periods="10" \
              --placement_cloud="laptop" \
              --placement_region="${cluster}" \
              --certs_dir=/opt/certs/yugabyte \
              --use_node_to_node_encryption=true \
              --allow_insecure_connections=false \
              --rpc_bind_addresses=$(HOSTNAME).yb-masters.$(NAMESPACE).svc.cluster.${cluster} \
              --server_broadcast_addresses=$(HOSTNAME).yb-masters.$(NAMESPACE).svc.cluster.${cluster}:7100 \
              --webserver_interface=0.0.0.0 \
              --master_enable_metrics_snapshotter=true \
              --metrics_snapshotter_tserver_metrics_whitelist=handler_latency_yb_tserver_TabletServerService_Read_count,handler_latency_yb_tserver_TabletServerService_Write_count,handler_latency_yb_tserver_TabletServerService_Read_sum,handler_latency_yb_tserver_TabletServerService_Write_sum,disk_usage,cpu_usage,node_up
        ports:
          - containerPort: 7000
            name: "http-ui"
          - containerPort: 7100
            name: "tcp-rpc-port"
          - containerPort: 15433
            name: "yugabyted-ui"
        volumeMounts:
          - name: debug-hooks-volume
            mountPath: /opt/debug_hooks_config
          - name: datadir0
            mountPath: /mnt/disk0
          - name: datadir1
            mountPath: /mnt/disk1
          - name: yb-master-yugabyte-tls-cert
            mountPath: /opt/certs/yugabyte
            readOnly: true
          - name: yugabyte-tls-client-cert
            mountPath: /root/.yugabytedb/
            readOnly: true
      - name: yb-cleanup
        image: "yugabytedb/yugabyte:2.21.0.0-b545"
        imagePullPolicy: IfNotPresent
        env:
        - name: USER
          value: "yugabyte"
        command:
          - "/sbin/tini"
          - "--"
        args:
          - "/bin/bash"
          - "-c"
          - >
            while true; do
              sleep 3600;
              /home/yugabyte/scripts/log_cleanup.sh;
            done
        volumeMounts:
          - name: datadir0
            mountPath: /home/yugabyte/
            subPath: yb-data
          - name: datadir0
            mountPath: /var/yugabyte/cores
            subPath: cores
      - name: yugabyted-ui
        image: "yugabytedb/yugabyte:2.21.0.0-b545"
        imagePullPolicy: "IfNotPresent"
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        command:
          - "/sbin/tini"
          - "--"
        args:
          - "/bin/bash"
          - "-c"
          - |
            while true; do
            /home/yugabyte/bin/yugabyted-ui \
              -database_host=$(HOSTNAME).yb-masters.$(NAMESPACE).svc.cluster.${cluster} \
              -bind_address=0.0.0.0 \
              -ysql_port=5433 \
              -ycql_port=9042 \
              -master_ui_port=7000 \
              -tserver_ui_port=9000 \
              -secure=true \
            || echo "ERROR: yugabyted-ui failed. This might be because your yugabyte \
            version is older than 2.21.0. If this is the case, set yugabytedUi.enabled to false \
            in helm to disable yugabyted-ui, or upgrade to a version 2.21.0 or newer."; \
            echo "Attempting restart in 30s."
            trap break TERM INT; \
            sleep 30s & wait; \
            trap - TERM INT;
            done \
      initContainers:
      - name: "certs-config"
        image: ubuntu:latest
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: certs
          mountPath: /certs-0
        - name: yb-master-yugabyte-tls-cert
          mountPath: /certs                      
        command:
        - bash
        - -c
        - |
          cp /certs-0/tls.key /certs/node.yb-master-0.yb-masters.h2.svc.cluster.${cluster}.key
          chmod 0600 /certs/node.yb-master-0.yb-masters.h2.svc.cluster.${cluster}.key
          cp /certs-0/tls.crt /certs/node.yb-master-0.yb-masters.h2.svc.cluster.${cluster}.crt
          cp /certs-0/ca.crt /certs/ca.crt       
      volumes:
        - name: debug-hooks-volume
          configMap:
            name: yugabytedb-master-hooks
            defaultMode: 0755
        - name: certs
          secret:
            secretName: yb-master-yugabyte-tls-cert
            defaultMode: 256        
        - name: yb-master-yugabyte-tls-cert
          emptyDir: {}
        - name: yugabyte-tls-client-cert
          secret:
            secretName: yugabyte-tls-client-cert
            defaultMode: 256
---
# Source: yugabyte/templates/service.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "yb-tserver"
  namespace: "h2"
  labels:    
    app: "yb-tserver"    
    heritage: "Helm"
    release: "yugabytedb"
    chart: "yugabyte"
    component: "yugabytedb"
spec:
  serviceName: "yb-tservers"
  podManagementPolicy: Parallel
  
  replicas: 1
  
  volumeClaimTemplates:
    - metadata:
        name: datadir0
        labels:          
          heritage: "Helm"
          release: "yugabytedb"
          chart: "yugabyte"
          component: "yugabytedb"
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: 10Gi
    - metadata:
        name: datadir1
        labels:          
          heritage: "Helm"
          release: "yugabytedb"
          chart: "yugabyte"
          component: "yugabytedb"
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: 10Gi
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  selector:
    matchLabels:      
      app: "yb-tserver"
  template:
    metadata:
      annotations:
        checksum/rootCA: 90ace38c3efb4bf1768630295603f06eb0c140b0384c0860e28e0ad1d4dd6a44
      labels:        
        app: "yb-tserver"        
        heritage: "Helm"
        release: "yugabytedb"
        chart: "yugabyte"
        component: "yugabytedb"
        yugabytedUi: "true"
    spec: # yb-tservers
      terminationGracePeriodSeconds: 300
      containers:
      - name: "yb-tserver"
        image: "yugabytedb/yugabyte:2.21.0.0-b545"
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
                - "bash"
                - "-c"
                - >
                  mkdir -p /mnt/disk0/cores;
                  mkdir -p /mnt/disk0/yb-data/scripts;
                  if [ ! -f /mnt/disk0/yb-data/scripts/log_cleanup.sh ]; then
                    if [ -f /home/yugabyte/bin/log_cleanup.sh ]; then
                      cp /home/yugabyte/bin/log_cleanup.sh /mnt/disk0/yb-data/scripts;
                    fi;
                  fi
        livenessProbe:
          exec:
            command:
            - bash
            - -v
            - -c
            - |
              echo "disk check at: $(date)" \
                | tee "/mnt/disk0/disk.check" "/mnt/disk1/disk.check" \
                && sync "/mnt/disk0/disk.check" "/mnt/disk1/disk.check";
              exit_code="$?";
              echo "disk check exited with: ${exit_code}";
              exit "${exit_code}"
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: YBDEVOPS_CORECOPY_DIR
          value: "/mnt/disk0/cores"
        
        - name: SSL_CERTFILE
          value: /root/.yugabytedb/root.crt
        resources:
          limits:
            cpu: "2"
            memory: 4Gi
          requests:
            cpu: "2"
            memory: 4Gi
        
        # core dumps are collected to workingDir if
        # kernel.core_pattern is set to a relative path like
        # core.%e.%p.%t ref:
        # https://github.com/yugabyte/charts/issues/11
        workingDir: "/mnt/disk0/cores"
        command:
          - "/sbin/tini"
          - "--"
        args:
          - "/bin/bash"
          - "-c"
          - |
            if [ -f /home/yugabyte/tools/k8s_preflight.py ]; then
              /home/yugabyte/tools/k8s_preflight.py all
            fi && \
            echo "disk check at: $(date)" \
              | tee "/mnt/disk0/disk.check" "/mnt/disk1/disk.check" \
              && sync "/mnt/disk0/disk.check" "/mnt/disk1/disk.check" && \
            if [ -f /home/yugabyte/tools/k8s_preflight.py ]; then
              PYTHONUNBUFFERED="true" /home/yugabyte/tools/k8s_preflight.py \
                dnscheck \
                --addr="$(HOSTNAME).yb-tservers.$(NAMESPACE).svc.cluster.${cluster}" \
                --port="9100"
            fi && \
            
            if [ -f /home/yugabyte/tools/k8s_preflight.py ]; then
              PYTHONUNBUFFERED="true" /home/yugabyte/tools/k8s_preflight.py \
                dnscheck \
                --addr="$(HOSTNAME).yb-tservers.$(NAMESPACE).svc.cluster.${cluster}:9100" \
                --port="9100"
            fi && \
            
            if [ -f /home/yugabyte/tools/k8s_preflight.py ]; then
              PYTHONUNBUFFERED="true" /home/yugabyte/tools/k8s_preflight.py \
                dnscheck \
                --addr="0.0.0.0" \
                --port="9000"
            fi && \
            
            if [[ -f /home/yugabyte/tools/k8s_parent.py ]]; then
              k8s_parent="/home/yugabyte/tools/k8s_parent.py"
            else
              k8s_parent=""
            fi && \
            if [ -f /home/yugabyte/tools/k8s_preflight.py ]; then
              PYTHONUNBUFFERED="true" /home/yugabyte/tools/k8s_preflight.py \
                dnscheck \
                --addr="$(HOSTNAME).yb-tservers.$(NAMESPACE).svc.cluster.${cluster}" \
                --port="9042"
            fi && \
            
            if [ -f /home/yugabyte/tools/k8s_preflight.py ]; then
              PYTHONUNBUFFERED="true" /home/yugabyte/tools/k8s_preflight.py \
                dnscheck \
                --addr="0.0.0.0:5433" \
                --port="5433"
            fi && \
            
            exec ${k8s_parent} /home/yugabyte/bin/yb-tserver \
              --fs_data_dirs=/mnt/disk0,/mnt/disk1 \
              --tserver_master_addrs=yb-master-0.yb-masters.h2.svc.cluster.cluster1:7100,yb-master-0.yb-masters.h2.svc.cluster.cluster2:7100,yb-master-0.yb-masters.h2.svc.cluster.cluster3:7100 \
              --metric_node_name=$(HOSTNAME) \
              --memory_limit_hard_bytes=3649044480 \
              --stderrthreshold=0 \
              --num_cpus=2 \
              --undefok=num_cpus,enable_ysql \
              --use_node_hostname_for_local_tserver=true \
              --leader_failure_max_missed_heartbeat_periods="10" \
              --placement_cloud="laptop" \
              --placement_region="${cluster}" \
              --certs_dir=/opt/certs/yugabyte \
              --use_node_to_node_encryption=true \
              --allow_insecure_connections=false \
              --use_client_to_server_encryption=true \
              --certs_for_client_dir=/opt/certs/yugabyte \
              --rpc_bind_addresses=$(HOSTNAME).yb-tservers.$(NAMESPACE).svc.cluster.${cluster} \
              --server_broadcast_addresses=$(HOSTNAME).yb-tservers.$(NAMESPACE).svc.cluster.${cluster}:9100 \
              --webserver_interface=0.0.0.0 \
              --enable_ysql=true \
              --pgsql_proxy_bind_address=0.0.0.0:5433 \
              --cql_proxy_bind_address=$(HOSTNAME).yb-tservers.$(NAMESPACE).svc.cluster.${cluster} \
              --tserver_enable_metrics_snapshotter=true \
              --metrics_snapshotter_interval_ms=11000 \
              --metrics_snapshotter_tserver_metrics_whitelist=handler_latency_yb_tserver_TabletServerService_Read_count,handler_latency_yb_tserver_TabletServerService_Write_count,handler_latency_yb_tserver_TabletServerService_Read_sum,handler_latency_yb_tserver_TabletServerService_Write_sum,disk_usage,cpu_usage,node_up
        ports:
          - containerPort: 9000
            name: "http-ui"
          - containerPort: 12000
            name: "http-ycql-met"
          - containerPort: 11000
            name: "http-yedis-met"
          - containerPort: 13000
            name: "http-ysql-met"
          - containerPort: 9100
            name: "tcp-rpc-port"
          - containerPort: 6379
            name: "tcp-yedis-port"
          - containerPort: 9042
            name: "tcp-yql-port"
          - containerPort: 5433
            name: "tcp-ysql-port"
          - containerPort: 15433
            name: "yugabyted-ui"
        volumeMounts:
          - name: tserver-tmp
            mountPath: /tmp
          - name: debug-hooks-volume
            mountPath: /opt/debug_hooks_config
          
          - name: datadir0
            mountPath: /mnt/disk0
          - name: datadir1
            mountPath: /mnt/disk1
          - name: yb-tserver-yugabyte-tls-cert
            mountPath: /opt/certs/yugabyte
            readOnly: true
          - name: yugabyte-tls-client-cert
            mountPath: /root/.yugabytedb/
            readOnly: true
      - name: yb-cleanup
        image: "yugabytedb/yugabyte:2.21.0.0-b545"
        imagePullPolicy: IfNotPresent
        env:
        - name: USER
          value: "yugabyte"
        command:
          - "/sbin/tini"
          - "--"
        args:
          - "/bin/bash"
          - "-c"
          - >
            while true; do
              sleep 3600;
              /home/yugabyte/scripts/log_cleanup.sh;
            done
        volumeMounts:
          - name: datadir0
            mountPath: /home/yugabyte/
            subPath: yb-data
          - name: datadir0
            mountPath: /var/yugabyte/cores
            subPath: cores
      - name: yugabyted-ui
        image: "yugabytedb/yugabyte:2.21.0.0-b545"
        imagePullPolicy: "IfNotPresent"
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        command:
          - "/sbin/tini"
          - "--"
        args:
          - "/bin/bash"
          - "-c"
          - |
            while true; do
            /home/yugabyte/bin/yugabyted-ui \
              -database_host=$(HOSTNAME).yb-tservers.$(NAMESPACE).svc.cluster.${cluster} \
              -bind_address=0.0.0.0 \
              -ysql_port=5433 \
              -ycql_port=9042 \
              -master_ui_port=7000 \
              -tserver_ui_port=9000 \
              -secure=true \
            || echo "ERROR: yugabyted-ui failed. This might be because your yugabyte \
            version is older than 2.21.0. If this is the case, set yugabytedUi.enabled to false \
            in helm to disable yugabyted-ui, or upgrade to a version 2.21.0 or newer."; \
            echo "Attempting restart in 30s."
            trap break TERM INT; \
            sleep 30s & wait; \
            trap - TERM INT;
            done \
      initContainers:
      - name: "certs-config"
        image: ubuntu:latest
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: certs
          mountPath: /certs-0
        - name: client-certs
          mountPath: /client-certs-0
        - name: yugabyte-tls-client-cert
          mountPath: /client-certs                    
        - name: yb-tserver-yugabyte-tls-cert
          mountPath: /certs                      
        command:
        - bash
        - -c
        - |
          cp /certs-0/tls.key /certs/node.yb-tserver-0.yb-tservers.h2.svc.cluster.${cluster}.key
          chmod 0600 /certs/node.yb-tserver-0.yb-tservers.h2.svc.cluster.${cluster}.key
          cp /certs-0/tls.crt /certs/node.yb-tserver-0.yb-tservers.h2.svc.cluster.${cluster}.crt
          cp /certs-0/ca.crt /certs/ca.crt
          cp /client-certs-0/tls.key /client-certs/yugabyte.key
          chmod 0600 /client-certs/yugabyte.key
          cp /client-certs-0/tls.crt /client-certs/yugabyte.crt
          cp /client-certs-0/ca.crt /client-certs/root.crt          
      volumes:
        - name: debug-hooks-volume
          configMap:
            name: yugabytedb-tserver-hooks
            defaultMode: 0755
        - name: tserver-tmp
          emptyDir: {}
        - name: certs
          secret:
            secretName: yb-tserver-yugabyte-tls-cert
            defaultMode: 256
        - name: client-certs
          secret:
            secretName: yugabyte-tls-client-cert
            defaultMode: 256                    
        - name: yb-tserver-yugabyte-tls-cert
          emptyDir: {}
        - name: yugabyte-tls-client-cert
          emptyDir: {}
---
# Source: yugabyte/templates/secrets.yaml
# Create secrets from other namespaces for masters.
---
# Source: yugabyte/templates/secrets.yaml
# Create secrets from other namespaces for tservers.
---
# Source: yugabyte/templates/service.yaml
---
